% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/power_basis_spline.R
\name{pbs_predict}
\alias{pbs_predict}
\title{Prediction using regression spline with trancated power basis}
\usage{
pbs_predict(x_test, order = NULL, knots = NULL, beta = NULL,
  basis = NULL)
}
\arguments{
\item{x_test}{The input values at which evaluations are required.}

\item{order}{The order of basis functions. order=degree+1}

\item{knots}{Breakpoints that define the spline, in terms of real values of input. It can be the return value of \code{generate_knots}.}

\item{beta}{The coefficients of nonparametric regression.}

\item{basis}{The return value of function \code{pbs_train}.
Instead of specify \code{knots}, \code{order} and \code{beta},One can supply \code{basis} directly.}
}
\value{
The evaluated output at x_test.
}
\description{
This function provides prediction at value of interest using regression spline with truncated power basis.
The B-splines are generated by \code{pbs_basis} and trained by the \code{pbs_train}.
The return value of \code{pbs_train} can be used as an argument of \code{pbs_predict}
}
\examples{
n <- 100
t <- seq(0,2*pi,length.out = 100)
a <- 3
b <- 2
c.unif <- runif(n)
amp <- 2
set.seed(1)
y1 <- a*sin(b*t)+c.unif*amp # uniform error
knots <- c(min(t),2*pi*c(1/4,2/4,3/4),max(t))
order <- 4
basis <- pbs_train(t,y1,order,knots=knots)
fit<-pbs_predict(t,basis=basis)
y.hat <- fit
plot(t, y1, t="l")
lines(t, y.hat, col=2)
}
\seealso{
\code{pbs_basis}, \code{pbs_train}, \code{generate_knots}.
}
