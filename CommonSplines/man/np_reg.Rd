% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nonparametric_regression.R
\name{np_reg}
\alias{np_reg}
\title{Nonparametric Regression using spline based methods}
\usage{
np_reg(x_train, y_train, x_test, func = "bs", order = 4, df = NULL,
  knots = NULL, lambda = 0.001, q = FALSE)
}
\arguments{
\item{x_train}{The input vector of training dataset.}

\item{y_train}{The output vector of training dataset.}

\item{x_test}{The input values at which evaluations are required.}

\item{df}{Degrees of freedom. One can supply df rather than knots;
(df + 1) knots are chosen at uniform quantiles of x.
The default, df = 4, sets 5 knots with 3 inner knots at uniform quantiles of x.}

\item{knots}{Breakpoints that define the spline.
The default is five knots at uniform quantiles c(0, .25, .5, .75, 1).
Typical values are the mean or median for one knot, quantiles for more knots.}
}
\value{
\item{y_pred}{A vector of dimension length(x), the prediction vector evaluated at x_test values.}
}
\description{
This function provides regression using natural cubic splines with truncated power basis functions.
Only univariate input can be used.
}
\examples{
x_train <- seq(1, 10, 0.1)
y_train <- cos(x_train)^3 * 3 - sin(x_train)^2 * 2 + x_train + exp(1)+rnorm(length(x_train),0,1)
plot(x_train,y_train)
title('Comparison of Different Degrees of Freedom')
x_test <- seq(1, 10, 0.1)
lines(x_test,cos(x_train)^3 * 3 - sin(x_train)^2 * 2 + x_train + exp(1),col="red")

df <- 2
y_pred <- np_reg(x_train, y_train, x_test,func="ncs", df=df)
lines(x_test,y_pred, col='blue')
df <- 4
y_pred <- np_reg(x_train, y_train, x_test,func="ncs", df=df)
lines(x_test,y_pred, col='green')
df <- 10
y_pred <- np_reg(x_train, y_train, x_test,func="ncs", df=df)
lines(x_test,y_pred, col='black')
legends <- c("Actual", "Prediction: 2 df", "Prediction: 4 df", "Prediction: 10 df")
legend('topleft', legend=legends, col=c('red', 'blue', 'green', 'black'), lty=1, cex=0.8)
}
