% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/power_basis_spline.R
\name{pbs_train}
\alias{pbs_train}
\title{Regression using Power Basis spline}
\usage{
pbs_train(x, y, order, knots)
}
\arguments{
\item{x}{The input vector of training dataset.}

\item{y}{The output vector of training dataset.}

\item{order}{The order that defines the spline.}

\item{knots}{The internal knots that define the spline.}

\item{x_test}{The input values at which evaluations are required.}
}
\value{
A list with the following components:
\item{beta}{ The coefficients of nonparametric regression.}
\item{basis}{The spline basis matrix of dimension c(length(x), length(knots)+order)}
\item{f}{The evaluated output at x_test.}
}
\description{
This function provides regressions using Power Basis splines. The basis are defined as
1,x,x^2,...,x^m,(x-k1)^(m-1)+,(x-k2)^(m-1)+,...,(x-kn)^(m-1)+
where m is the order, k1, k2 and kn are n knots, '+' denotes the positive part.
}
\details{
Only univariate input can be used.
}
\examples{
n <- 100
t <- seq(0,2*pi,length.out = 100)
a <- 3
b <- 2
c.unif <- runif(n)
amp <- 2
set.seed(1)
y1 <- a*sin(b*t)+c.unif*amp # uniform error
knots <- c(min(t),2*pi*c(1/4,2/4,3/4),max(t))
order <- 4
basis <- pbs_train(t,y1,order,knots)
fit<-pbs_predict(t,basis=basis)
y.hat <- fit
plot(t, y1, t="l")
lines(t, y.hat, col=2)
}
